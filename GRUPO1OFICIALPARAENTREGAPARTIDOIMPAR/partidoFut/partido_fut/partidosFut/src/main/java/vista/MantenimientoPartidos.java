/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;


import datos.PartidoDAO;

import domain.Partido;

import java.util.List;
import javax.swing.table.DefaultTableModel;
import java.io.File;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author visitante
 */
public class MantenimientoPartidos extends javax.swing.JInternalFrame {


    public void llenadoDeTablas() {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("equipo");
        modelo.addColumn("Partidos_jugados");
        modelo.addColumn("ganados");
        modelo.addColumn("empatados");
        modelo.addColumn("perdidos");
        modelo.addColumn("goles a Favor");
        modelo.addColumn("Goles en contra");
        modelo.addColumn("Puntos");
        PartidoDAO partidoDAO = new PartidoDAO();
        List<Partido> partidos = partidoDAO.select();
        
        tablaPartido.setModel(modelo);
        String[] dato = new String[9];
        for (int i = 0; i < partidos.size(); i++) {
            dato[0] = Integer.toString(partidos.get(i).getId());
            dato[1] = partidos.get(i).getEquipo();
            dato[2] = partidos.get(i).getPartidos_jugados();
            dato[3] = partidos.get(i).getGanados();
            dato[4] = partidos.get(i).getEmpatados();
            dato[5] = partidos.get(i).getPerdidos();
            dato[6]=partidos.get(i).getGoles_favor();
            dato[7]=partidos.get(i).getGoles_contra();
            dato[8]=partidos.get(i).getPuntos();
            //System.out.println("vendedor:" + vendedores);
            modelo.addRow(dato);
        }
    }
/*
    public void buscarAlumno() {
        MantenimientoAlumno alumnoAconsultar = new MantenimientoAlumno();
        AlumnoDAO alumnoDAO = new AlumnoDAO();
        alumnoAconsultar.setCarnet_alumno(Integer.parseInt(txtbuscado.getText()));
        alumnoAconsultar = alumnoDAO.query(alumnoAconsultar);
        txtNombre.setText(alumnoAconsultar.getNombre_alumno());
        txtDireccion.setText(alumnoAconsultar.getDireccion_alumno());
        txtTel.setText(alumnoAconsultar.getTelefono_alumno());
        txtMail.setText(alumnoAconsultar.getEmail_alumno());
        txtEstatus.setText(alumnoAconsultar.getEstatus_alumno());
        
        
    }
*/
    public MantenimientoPartidos() {
        initComponents();
        llenadoDeTablas();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lb2 = new javax.swing.JLabel();
        lbusu = new javax.swing.JLabel();
        btnRegistrar = new javax.swing.JButton();
        label1 = new javax.swing.JLabel();
        btnReiniciar = new javax.swing.JButton();
        label3 = new javax.swing.JLabel();
        txtbuscado = new javax.swing.JTextField();
        txtNombreEquipo = new javax.swing.JTextField();
        btnLimpiar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPartido = new javax.swing.JTable();
        txtPartidos = new javax.swing.JTextField();
        label5 = new javax.swing.JLabel();
        lb = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        txtGanados = new javax.swing.JTextField();
        txtempatados = new javax.swing.JTextField();
        txtPerdidos = new javax.swing.JTextField();
        label6 = new javax.swing.JLabel();
        label7 = new javax.swing.JLabel();
        label8 = new javax.swing.JLabel();
        txtGolesAFavor = new javax.swing.JTextField();
        label9 = new javax.swing.JLabel();
        txtGolesEnContra = new javax.swing.JTextField();
        label10 = new javax.swing.JLabel();
        txtPuntos = new javax.swing.JTextField();
        label11 = new javax.swing.JLabel();
        btnGenerar = new javax.swing.JButton();
        btnResult = new javax.swing.JButton();

        lb2.setForeground(new java.awt.Color(204, 204, 204));
        lb2.setText(".");

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Partido Fut");
        setVisible(true);

        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        label1.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        label1.setText("Partidos de Fut");

        btnReiniciar.setText("NUEVO PARTIDO");
        btnReiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReiniciarActionPerformed(evt);
            }
        });

        label3.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        label3.setText("Nombre");

        txtNombreEquipo.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtNombreEquipo.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 204, 204)));

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        tablaPartido.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tablaPartido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID ", "Equipo", "Partidosjugados", "Ganados", "Empatados", "Perdidos", "Goles Favor", "Golesconta", "Puntos"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaPartido);

        txtPartidos.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtPartidos.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 204, 204)));

        label5.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        label5.setText("Partidos jugados");

        lb.setForeground(new java.awt.Color(204, 204, 204));
        lb.setText(".");

        jButton2.setText("Ayuda");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        txtGanados.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtGanados.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 204, 204)));

        txtempatados.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtempatados.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 204, 204)));

        txtPerdidos.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtPerdidos.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 204, 204)));

        label6.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        label6.setText("Ganados");

        label7.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        label7.setText("Empatados");

        label8.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        label8.setText("Perdidos");

        txtGolesAFavor.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtGolesAFavor.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 204, 204)));

        label9.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        label9.setText("Goles a favor");

        txtGolesEnContra.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtGolesEnContra.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 204, 204)));

        label10.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        label10.setText("Goles a en contra");

        txtPuntos.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtPuntos.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 204, 204)));

        label11.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        label11.setText("Puntos");

        btnGenerar.setText("Generar");
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });

        btnResult.setText("Resultado");
        btnResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResultActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 575, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(383, 383, 383))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnReiniciar)
                                .addGap(8, 8, 8))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(label3)
                                            .addComponent(label5)
                                            .addComponent(label6)
                                            .addComponent(label7)
                                            .addComponent(label8))
                                        .addGap(38, 38, 38)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtPartidos, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                                            .addComponent(txtNombreEquipo)
                                            .addComponent(txtGanados, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                                            .addComponent(txtempatados, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                                            .addComponent(txtPerdidos, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(label9)
                                            .addComponent(label10)
                                            .addComponent(label11))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(29, 29, 29)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(txtGolesAFavor, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                                                    .addComponent(txtGolesEnContra, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                                                    .addComponent(txtPuntos, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(btnGenerar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(53, 53, 53)
                                                        .addComponent(btnResult, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtbuscado, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(138, 138, 138)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(117, 117, 117)
                                .addComponent(lb, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap())
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(label1)
                                        .addGap(166, 166, 166))))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombreEquipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtPartidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtGanados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtempatados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPerdidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(label5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label8)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtGolesAFavor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtGolesEnContra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPuntos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label11))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(btnReiniciar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtbuscado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnRegistrar)
                                    .addComponent(btnLimpiar))
                                .addGap(38, 38, 38)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnResult)
                                    .addComponent(btnGenerar)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lb)
                        .addGap(9, 9, 9)
                        .addComponent(label1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap(90, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("Mantenimiento Partido fut");

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**/
    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed

    PartidoDAO partidoDAO = new PartidoDAO();
    
    // Contar el número de registros existentes en la base de datos
    int totalRegistros = partidoDAO.countPartidos();

    // Si ya hay 6 registros, no se permite agregar más
    if (totalRegistros >= 6) {
        JOptionPane.showMessageDialog(null, "Ya se han registrado 6 partidos. No se pueden registrar más.");
        return;  // Salir del método sin realizar la inserción
    }
    
    // Si no hay 6 registros, continuar con el registro
    Partido partidoAInsertar = new Partido();
    partidoAInsertar.setEquipo(txtNombreEquipo.getText());
    partidoAInsertar.setPartidos_jugados(txtPartidos.getText());
    partidoAInsertar.setGanados(txtGanados.getText());
    partidoAInsertar.setEmpatados(txtempatados.getText());
    partidoAInsertar.setPerdidos(txtPerdidos.getText());
    partidoAInsertar.setGoles_favor(txtGolesAFavor.getText());
    partidoAInsertar.setGoles_contra(txtGolesEnContra.getText());
    partidoAInsertar.setPuntos(txtPuntos.getText());
    
    partidoDAO.insert(partidoAInsertar);
    llenadoDeTablas();
    // Registrar el evento en la bitácora

    }//GEN-LAST:event_btnRegistrarActionPerformed
/**/
    private void btnReiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReiniciarActionPerformed
//      private void btnReiniciarActionPerformed(java.awt.event.ActionEvent evt) {                                             
    // Crear una instancia de PartidoDAO para manejar las operaciones con la base de datos
    PartidoDAO partidoDAO = new PartidoDAO();
    
    // Eliminar todos los registros de la base de datos
    partidoDAO.eliminarTodos(); // gabriela pinto
    
    // Reiniciar los campos del formulario para insertar nuevos datos
    txtbuscado.setText("");
    txtNombreEquipo.setText("");
    txtPartidos.setText("");
    txtGanados.setText("");
    txtempatados.setText("");
    txtPerdidos.setText("");
    txtGolesAFavor.setText("");
    txtGolesEnContra.setText("");
    txtPuntos.setText("");
    
    // Actualizar las tablas si es necesario
    llenadoDeTablas();
    
    // Registrar el evento en la bitácora (si es necesario)
    

  
    }//GEN-LAST:event_btnReiniciarActionPerformed
   
public void genrearResultado() {
    // Generar números aleatorios entre 1 y 10
    Random rand = new Random();
    int numeroAleatorio1 = rand.nextInt(10) + 1;
    int numeroAleatorio2 = rand.nextInt(10) + 1;
    int numeroAleatorio3 = rand.nextInt(10) + 1;
    int numeroAleatorio4 = rand.nextInt(10) + 1;
    int numeroAleatorio5 = rand.nextInt(10) + 1;
    int numeroAleatorio6 = rand.nextInt(10) + 1;
    int numeroAleatorio7 = rand.nextInt(10) + 1;
    // Asignar los números aleatorios a los JTextField
    txtPartidos.setText(String.valueOf(numeroAleatorio1));
    txtGanados.setText(String.valueOf(numeroAleatorio2));
    txtempatados.setText(String.valueOf(numeroAleatorio3));
    txtPerdidos.setText(String.valueOf(numeroAleatorio4));
    txtGolesAFavor.setText(String.valueOf(numeroAleatorio5));
    txtGolesEnContra.setText(String.valueOf(numeroAleatorio6));
    txtPuntos.setText(String.valueOf(numeroAleatorio7));
    
}
    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
      
        txtNombreEquipo.setText("");
        txtPartidos.setText("");
        txtbuscado.setText("");
        txtGanados.setText("");
        txtempatados.setText("");
        txtPerdidos.setText("");
        txtGolesAFavor.setText("");
        txtGolesEnContra.setText("");
        txtPuntos.setText("");
        btnRegistrar.setEnabled(true);
        btnReiniciar.setEnabled(true);
       
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            if ((new File("src\\main\\java\\ayudas\\ProcesoMayor.chm")).exists()) {
                Process p = Runtime
                        .getRuntime()
                        .exec("rundll32 url.dll,FileProtocolHandler src\\main\\java\\ayudas\\ProcesoMayor.chm");
                p.waitFor();
            } else {
                System.out.println("La ayuda no Fue encontrada");
            }
            System.out.println("Correcto");
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        // TODO add your handling code here:
      genrearResultado();
    }//GEN-LAST:event_btnGenerarActionPerformed

    private void btnResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResultActionPerformed
// Obtener el modelo de la tabla
DefaultTableModel model = (DefaultTableModel) tablaPartido.getModel();

// Variables para almacenar el máximo, mínimo y los empates
int maxPuntos = Integer.MIN_VALUE;
int minPuntos = Integer.MAX_VALUE;
int filaMaxima = -1;
int filaMinima = -1;
List<String> empatesMaximos = new ArrayList<>();  // Guardar los nombres de los equipos con el máximo
List<String> empatesMinimos = new ArrayList<>();  // Guardar los nombres de los equipos con el mínimo

// Índice de la columna "puntos" (depende del orden de tus columnas)
int columnaPuntos = 8; // Cambia este valor según tu JTable
int columnaEquipo = 1; // La columna donde está el nombre del equipo (columna 2 en tu caso, índice 1)

// Recorrer todas las filas del JTable
for (int fila = 0; fila < model.getRowCount(); fila++) {
    // Obtener el valor de la columna "puntos" en la fila actual
    String valorPuntos = model.getValueAt(fila, columnaPuntos).toString();
    
    try {
        // Convertir el String a entero
        int puntos = Integer.parseInt(valorPuntos);
        
        // Obtener el nombre del equipo de la columna correspondiente
        String equipo = model.getValueAt(fila, columnaEquipo).toString();
        
        // Comparar para encontrar el máximo
        if (puntos > maxPuntos) {
            maxPuntos = puntos;
            empatesMaximos.clear(); // Limpiar los empates previos
            empatesMaximos.add(equipo); // Guardar el nombre del equipo con el máximo
        } else if (puntos == maxPuntos) {
            empatesMaximos.add(equipo); // Guardar el equipo si hay empate en el máximo
        }
        
        // Comparar para encontrar el mínimo
        if (puntos < minPuntos) {
            minPuntos = puntos;
            empatesMinimos.clear(); // Limpiar los empates previos
            empatesMinimos.add(equipo); // Guardar el nombre del equipo con el mínimo
        } else if (puntos == minPuntos) {
            empatesMinimos.add(equipo); // Guardar el equipo si hay empate en el mínimo
        }
    } catch (NumberFormatException e) {
        // Manejar errores si el valor no es numérico
        System.err.println("Error en fila " + fila + ": '" + valorPuntos + "' no es un número válido.");
    }
}

// Mostrar el resultado del máximo
if (!empatesMaximos.isEmpty()) {
    // Mostrar el máximo y los empates con los nombres de los equipos
    String mensajeMaximo = "El valor máximo de puntos es: " + maxPuntos + " alcanzado por: " + String.join(", ", empatesMaximos);
    JOptionPane.showMessageDialog(null, mensajeMaximo);
} else {
    JOptionPane.showMessageDialog(null, "No hay datos válidos en la columna 'puntos'.");
}

// Mostrar el resultado del mínimo
if (!empatesMinimos.isEmpty()) {
    // Mostrar el mínimo y los empates con los nombres de los equipos
    String mensajeMinimo = "El valor mínimo de puntos es: " + minPuntos + " alcanzado por: " + String.join(", ", empatesMinimos);
    JOptionPane.showMessageDialog(null, mensajeMinimo);
} else {
    JOptionPane.showMessageDialog(null, "No hay datos válidos en la columna 'puntos'.");
}

// Para ordenar de primero a sexto lugar
List<String> equipos = new ArrayList<>();
for (int i = 0; i < model.getRowCount(); i++) {
    String equipo = model.getValueAt(i, columnaEquipo).toString(); // Nombre del equipo
    String valor = model.getValueAt(i, columnaPuntos).toString();  // Puntos
    try {
        int puntos = Integer.parseInt(valor);
        equipos.add(equipo + ": " + puntos);
    } catch (NumberFormatException e) {
        // Si el valor no es un número, lo ignoramos
    }
}

// Ordenar los equipos por puntos (descendente)
equipos.sort((e1, e2) -> {
    int puntos1 = Integer.parseInt(e1.split(": ")[1]);
    int puntos2 = Integer.parseInt(e2.split(": ")[1]);
    return Integer.compare(puntos2, puntos1); // Ordenar de mayor a menor
});

// Mostrar los primeros seis lugares
StringBuilder ranking = new StringBuilder("Primeros seis lugares:\n");
for (int i = 0; i < Math.min(6, equipos.size()); i++) {
    ranking.append(i + 1).append(". ").append(equipos.get(i)).append("\n");
}
JOptionPane.showMessageDialog(null, ranking.toString());

    }//GEN-LAST:event_btnResultActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton btnReiniciar;
    private javax.swing.JButton btnResult;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label1;
    private javax.swing.JLabel label10;
    private javax.swing.JLabel label11;
    private javax.swing.JLabel label3;
    private javax.swing.JLabel label5;
    private javax.swing.JLabel label6;
    private javax.swing.JLabel label7;
    private javax.swing.JLabel label8;
    private javax.swing.JLabel label9;
    private javax.swing.JLabel lb;
    private javax.swing.JLabel lb2;
    private javax.swing.JLabel lbusu;
    private javax.swing.JTable tablaPartido;
    private javax.swing.JTextField txtGanados;
    private javax.swing.JTextField txtGolesAFavor;
    private javax.swing.JTextField txtGolesEnContra;
    private javax.swing.JTextField txtNombreEquipo;
    private javax.swing.JTextField txtPartidos;
    private javax.swing.JTextField txtPerdidos;
    private javax.swing.JTextField txtPuntos;
    private javax.swing.JTextField txtbuscado;
    private javax.swing.JTextField txtempatados;
    // End of variables declaration//GEN-END:variables

    private void buscarVendedor() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
